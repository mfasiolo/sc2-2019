<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Advanced Rcpp II on SC2</title>
    <link>https://mfasiolo.github.io/sc2-2019/rcpp_advanced_ii/</link>
    <description>Recent content in Advanced Rcpp II on SC2</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://mfasiolo.github.io/sc2-2019/rcpp_advanced_ii/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1. Building larger Rcpp programs</title>
      <link>https://mfasiolo.github.io/sc2-2019/rcpp_advanced_ii/1_building_rcpp_apps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mfasiolo.github.io/sc2-2019/rcpp_advanced_ii/1_building_rcpp_apps/</guid>
      <description>Spreading Rcpp code over multiple C++ files Using Rcpp extensions with sourceCpp Spreading Rcpp code over multiple C++ files So far in these notes, we have put all our Rcpp code in a single .cpp file or we have written the Rcpp code directly in R. An example of the latter approach is:
library(Rcpp) sourceCpp(code = &amp;#39; #include &amp;lt;Rcpp.h&amp;gt; using namespace Rcpp; double mySquare(double x){ return x * x; } // [[Rcpp::export(name = &amp;quot;squareVect&amp;quot;)]] NumericVector squareVect_I(NumericVector v) { NumericVector out( v.</description>
    </item>
    
    <item>
      <title>2. Using Rcpp in an R package (1)</title>
      <link>https://mfasiolo.github.io/sc2-2019/rcpp_advanced_ii/2_rcpp_in_packages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mfasiolo.github.io/sc2-2019/rcpp_advanced_ii/2_rcpp_in_packages/</guid>
      <description>Intro to Rcpp.package.skeleton and related tools Adding a C++ function to the package Intro to Rcpp.package.skeleton and related tools In this section we will learn how to build a basic R package containing Rcpp code. The material provided here relies mainly on the Rcpp-attributes and Rcpp-package vignettes.
The Rcpp package provides an extension of the utils::package.skeleton function, which automatically creates a source R package which uses several features of Rcpp.</description>
    </item>
    
    <item>
      <title>3. Using Rcpp in an R package (2)</title>
      <link>https://mfasiolo.github.io/sc2-2019/rcpp_advanced_ii/3_rcpp_in_packages_2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mfasiolo.github.io/sc2-2019/rcpp_advanced_ii/3_rcpp_in_packages_2/</guid>
      <description>Using C++ code from other packages within your package Making your packageâ€™s C++ code callable from other packages Using an R package to make a C++ library available to other packages Using C++ code from other packages within your package In the previous section we explained how to build a basic R package containing Rcpp-based C++ code. Here we explain how you can use C++ code from other packages (e.</description>
    </item>
    
  </channel>
</rss>
